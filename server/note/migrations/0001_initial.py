# Generated by Django 5.1.7 on 2025-05-22 10:38

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIConversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_conversations', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'AI对话',
                'verbose_name_plural': 'AI对话',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('user', '用户'), ('ai', 'AI')], max_length=10, verbose_name='消息类型')),
                ('content', models.TextField(verbose_name='内容')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='时间戳')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='note.aiconversation', verbose_name='所属对话')),
            ],
            options={
                'verbose_name': 'AI消息',
                'verbose_name_plural': 'AI消息',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('content', models.TextField(verbose_name='内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_public', models.BooleanField(default=False, verbose_name='是否公开')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_notes', to=settings.AUTH_USER_MODEL, verbose_name='所有者')),
            ],
            options={
                'verbose_name': '笔记',
                'verbose_name_plural': '笔记',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='aiconversation',
            name='note',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_conversations', to='note.note', verbose_name='相关笔记'),
        ),
        migrations.CreateModel(
            name='NoteGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='组名')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_groups', to=settings.AUTH_USER_MODEL, verbose_name='所有者')),
            ],
            options={
                'verbose_name': '笔记分组',
                'verbose_name_plural': '笔记分组',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='note',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='note.notegroup', verbose_name='所属分组'),
        ),
        migrations.CreateModel(
            name='NoteGroupPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(choices=[('read', '只读'), ('write', '读写'), ('admin', '管理员')], default='read', max_length=10, verbose_name='权限')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='note.notegroup', verbose_name='笔记分组')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '笔记分组权限',
                'verbose_name_plural': '笔记分组权限',
                'unique_together': {('user', 'group')},
            },
        ),
        migrations.AddField(
            model_name='notegroup',
            name='users',
            field=models.ManyToManyField(related_name='accessible_groups', through='note.NoteGroupPermission', to=settings.AUTH_USER_MODEL, verbose_name='可访问用户'),
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(choices=[('light', '浅色'), ('dark', '深色'), ('system', '跟随系统')], default='system', max_length=10, verbose_name='主题')),
                ('enable_ai', models.BooleanField(default=True, verbose_name='启用AI')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preference', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户偏好',
                'verbose_name_plural': '用户偏好',
            },
        ),
    ]
